#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>

void generate_c_file(char *out_filename);

#define SCREEN_WIDTH 160
#define SCREEN_HEIGHT 100
#define SPRITE_WIDTH 8
#define SPRITE_HEIGHT 8

unsigned char buffer[10000];
int buffer_size = 0;

void main(int argc, char **argv) {

    float i;

    float width = SCREEN_WIDTH - SPRITE_WIDTH;
    float height = SCREEN_HEIGHT - SPRITE_HEIGHT;

    for (i = 0.0; i < 360.0; i += 0.5) {
        short x = (short) (sin(3 * i * M_PI / 180.0) * width / 2.0) + width / 2;
        short y = (short) (cos(2 * i * M_PI / 180.0) * height / 2.0) + height / 2;

        short offset  = x + y * 160;
        printf("%d %d => %d\n", x, y, offset);

        buffer[buffer_size ++] = x;
        buffer[buffer_size ++] = y;
    }

    generate_c_file("curve_rom.c");
    printf("%d bytes generated\n", buffer_size);
}

void generate_c_file(char *out_filename) {
    FILE *outfile;
    int amount, start, i, read_count;

    outfile=fopen(out_filename,"wb");
    if (outfile==NULL)
    {
        printf("cannot open %s for writing\n",out_filename);
        return;
    }

    fprintf(outfile,"/* Autogenerated file, DO NOT EDIT !!! */\n\n");
    fprintf(outfile,"const int curve_length = %d\n\n", buffer_size);
    fprintf(outfile,"const unsigned char curve[] = {\n");

    start = 1;
    read_count = 0;
    do
    {
        unsigned char line_buffer[8];

        if (buffer_size - read_count < 8) {
            amount = buffer_size - read_count;
        } else {
            amount = 8;
        }

        memcpy (line_buffer, buffer + read_count, amount);
        
        read_count += amount;

        if (start == 0)
        {
            fprintf(outfile, ",\n");
        }
        else
        {
            start = 0;
        }
        if (amount >= 1)
        {
            fprintf(outfile, "    0x%02X", line_buffer[0]);
        }
        for (i = 2; i < 9; i++)
        {
            if (amount >= i)
            {
                fprintf(outfile, ", 0x%02X", line_buffer[i - 1]);
            }
        }
    } while (read_count < buffer_size);

    fprintf(outfile,"\n};\n");

    fclose(outfile);
    return;
}

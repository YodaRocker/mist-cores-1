                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                              4 ; This file was generated Tue Nov  8 14:11:27 2016
                              5 ;--------------------------------------------------------
                              6 	.module text
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _hex
                             13 	.globl _text_char
                             14 	.globl _text_hex
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
   0000                      26 _hex::
   0000                      27 	.ds 16
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _HOME
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 ;text.c:10: void text_char(unsigned char *dst, unsigned char c) {
                             49 ;	---------------------------------
                             50 ; Function text_char
                             51 ; ---------------------------------
   0000                      52 _text_char::
   0000 DD E5         [15]   53 	push	ix
   0002 DD 21 00 00   [14]   54 	ld	ix,#0
   0006 DD 39         [15]   55 	add	ix,sp
   0008 F5            [11]   56 	push	af
   0009 F5            [11]   57 	push	af
   000A 3B            [ 6]   58 	dec	sp
                             59 ;text.c:11: unsigned char *p = font + FONT_HEIGHT * (unsigned char)(c - 32);
   000B DD 7E 06      [19]   60 	ld	a,6 (ix)
   000E C6 E0         [ 7]   61 	add	a,#0xE0
   0010 4F            [ 4]   62 	ld	c,a
   0011 06 00         [ 7]   63 	ld	b,#0x00
   0013 69            [ 4]   64 	ld	l, c
   0014 60            [ 4]   65 	ld	h, b
   0015 29            [11]   66 	add	hl, hl
   0016 09            [11]   67 	add	hl, bc
   0017 29            [11]   68 	add	hl, hl
   0018 11r00r00      [10]   69 	ld	de,#_font
   001B 19            [11]   70 	add	hl,de
   001C 4D            [ 4]   71 	ld	c, l
   001D 44            [ 4]   72 	ld	b, h
                             73 ;text.c:14: for(i = 0; i < FONT_HEIGHT; i ++) {
   001E DD 7E 04      [19]   74 	ld	a,4 (ix)
   0021 DD 77 FB      [19]   75 	ld	-5 (ix),a
   0024 DD 7E 05      [19]   76 	ld	a,5 (ix)
   0027 DD 77 FC      [19]   77 	ld	-4 (ix),a
   002A 1E 00         [ 7]   78 	ld	e,#0x00
   002C                      79 00102$:
                             80 ;text.c:15: unsigned char l = *p++;
   002C 0A            [ 7]   81 	ld	a,(bc)
   002D 6F            [ 4]   82 	ld	l,a
   002E 03            [ 6]   83 	inc	bc
                             84 ;text.c:17: *dst = (((l & 0x80) ? 0x03:0x00) |
   002F DD 7E FB      [19]   85 	ld	a,-5 (ix)
   0032 DD 77 FE      [19]   86 	ld	-2 (ix),a
   0035 DD 7E FC      [19]   87 	ld	a,-4 (ix)
   0038 DD 77 FF      [19]   88 	ld	-1 (ix),a
   003B CB 7D         [ 8]   89 	bit	7, l
   003D 28 06         [12]   90 	jr	Z,00106$
   003F DD 36 FD 03   [19]   91 	ld	-3 (ix),#0x03
   0043 18 04         [12]   92 	jr	00107$
   0045                      93 00106$:
   0045 DD 36 FD 00   [19]   94 	ld	-3 (ix),#0x00
   0049                      95 00107$:
                             96 ;text.c:18: ((l & 0x40) ? 0x0C:0x00) |
   0049 CB 75         [ 8]   97 	bit	6, l
   004B 28 04         [12]   98 	jr	Z,00108$
   004D 3E 0C         [ 7]   99 	ld	a,#0x0C
   004F 18 02         [12]  100 	jr	00109$
   0051                     101 00108$:
   0051 3E 00         [ 7]  102 	ld	a,#0x00
   0053                     103 00109$:
   0053 DD B6 FD      [19]  104 	or	a, -3 (ix)
   0056 67            [ 4]  105 	ld	h,a
                            106 ;text.c:19: ((l & 0x20) ? 0x30:0x00) |
   0057 CB 6D         [ 8]  107 	bit	5, l
   0059 28 04         [12]  108 	jr	Z,00110$
   005B 3E 30         [ 7]  109 	ld	a,#0x30
   005D 18 02         [12]  110 	jr	00111$
   005F                     111 00110$:
   005F 3E 00         [ 7]  112 	ld	a,#0x00
   0061                     113 00111$:
   0061 B4            [ 4]  114 	or	a, h
   0062 67            [ 4]  115 	ld	h,a
                            116 ;text.c:20: ((l & 0x10) ? 0xC0:0x00));
   0063 CB 65         [ 8]  117 	bit	4, l
   0065 28 04         [12]  118 	jr	Z,00112$
   0067 3E C0         [ 7]  119 	ld	a,#0xC0
   0069 18 02         [12]  120 	jr	00113$
   006B                     121 00112$:
   006B 3E 00         [ 7]  122 	ld	a,#0x00
   006D                     123 00113$:
   006D B4            [ 4]  124 	or	a, h
   006E DD 6E FE      [19]  125 	ld	l,-2 (ix)
   0071 DD 66 FF      [19]  126 	ld	h,-1 (ix)
   0074 77            [ 7]  127 	ld	(hl),a
                            128 ;text.c:21: dst += 80;
   0075 DD 7E FB      [19]  129 	ld	a,-5 (ix)
   0078 C6 50         [ 7]  130 	add	a, #0x50
   007A DD 77 FB      [19]  131 	ld	-5 (ix),a
   007D DD 7E FC      [19]  132 	ld	a,-4 (ix)
   0080 CE 00         [ 7]  133 	adc	a, #0x00
   0082 DD 77 FC      [19]  134 	ld	-4 (ix),a
                            135 ;text.c:14: for(i = 0; i < FONT_HEIGHT; i ++) {
   0085 1C            [ 4]  136 	inc	e
   0086 7B            [ 4]  137 	ld	a,e
   0087 EE 80         [ 7]  138 	xor	a, #0x80
   0089 D6 86         [ 7]  139 	sub	a, #0x86
   008B 38 9F         [12]  140 	jr	C,00102$
   008D DD F9         [10]  141 	ld	sp, ix
   008F DD E1         [14]  142 	pop	ix
   0091 C9            [10]  143 	ret
                            144 ;text.c:25: void text_hex(unsigned char *dst, unsigned char value) {
                            145 ;	---------------------------------
                            146 ; Function text_hex
                            147 ; ---------------------------------
   0092                     148 _text_hex::
                            149 ;text.c:27: text_char(dst, hex[(value >> 4) & 0x0F]);
   0092 11r00r00      [10]  150 	ld	de,#_hex+0
   0095 21 04 00      [10]  151 	ld	hl, #4+0
   0098 39            [11]  152 	add	hl, sp
   0099 7E            [ 7]  153 	ld	a, (hl)
   009A 07            [ 4]  154 	rlca
   009B 07            [ 4]  155 	rlca
   009C 07            [ 4]  156 	rlca
   009D 07            [ 4]  157 	rlca
   009E E6 0F         [ 7]  158 	and	a,#0x0F
   00A0 E6 0F         [ 7]  159 	and	a, #0x0F
   00A2 6F            [ 4]  160 	ld	l, a
   00A3 26 00         [ 7]  161 	ld	h,#0x00
   00A5 19            [11]  162 	add	hl,de
   00A6 66            [ 7]  163 	ld	h,(hl)
   00A7 D5            [11]  164 	push	de
   00A8 E5            [11]  165 	push	hl
   00A9 33            [ 6]  166 	inc	sp
   00AA 21 05 00      [10]  167 	ld	hl, #5
   00AD 39            [11]  168 	add	hl, sp
   00AE 4E            [ 7]  169 	ld	c, (hl)
   00AF 23            [ 6]  170 	inc	hl
   00B0 46            [ 7]  171 	ld	b, (hl)
   00B1 C5            [11]  172 	push	bc
   00B2 CDr00r00      [17]  173 	call	_text_char
   00B5 F1            [10]  174 	pop	af
   00B6 33            [ 6]  175 	inc	sp
   00B7 D1            [10]  176 	pop	de
                            177 ;text.c:28: text_char(dst+1, hex[value & 0xF]);
   00B8 21 04 00      [10]  178 	ld	hl, #4+0
   00BB 39            [11]  179 	add	hl, sp
   00BC 7E            [ 7]  180 	ld	a, (hl)
   00BD E6 0F         [ 7]  181 	and	a, #0x0F
   00BF 6F            [ 4]  182 	ld	l, a
   00C0 26 00         [ 7]  183 	ld	h,#0x00
   00C2 19            [11]  184 	add	hl,de
   00C3 46            [ 7]  185 	ld	b,(hl)
   00C4 21 02 00      [10]  186 	ld	hl, #2
   00C7 39            [11]  187 	add	hl, sp
   00C8 5E            [ 7]  188 	ld	e, (hl)
   00C9 23            [ 6]  189 	inc	hl
   00CA 56            [ 7]  190 	ld	d, (hl)
   00CB 13            [ 6]  191 	inc	de
   00CC C5            [11]  192 	push	bc
   00CD 33            [ 6]  193 	inc	sp
   00CE D5            [11]  194 	push	de
   00CF CDr00r00      [17]  195 	call	_text_char
   00D2 F1            [10]  196 	pop	af
   00D3 33            [ 6]  197 	inc	sp
   00D4 C9            [10]  198 	ret
                            199 	.area _CODE
                            200 	.area _INITIALIZER
   0000                     201 __xinit__hex:
   0000 30                  202 	.db #0x30	; 48	'0'
   0001 31                  203 	.db #0x31	; 49	'1'
   0002 32                  204 	.db #0x32	; 50	'2'
   0003 33                  205 	.db #0x33	; 51	'3'
   0004 34                  206 	.db #0x34	; 52	'4'
   0005 35                  207 	.db #0x35	; 53	'5'
   0006 36                  208 	.db #0x36	; 54	'6'
   0007 37                  209 	.db #0x37	; 55	'7'
   0008 38                  210 	.db #0x38	; 56	'8'
   0009 39                  211 	.db #0x39	; 57	'9'
   000A 41                  212 	.db #0x41	; 65	'A'
   000B 42                  213 	.db #0x42	; 66	'B'
   000C 43                  214 	.db #0x43	; 67	'C'
   000D 44                  215 	.db #0x44	; 68	'D'
   000E 45                  216 	.db #0x45	; 69	'E'
   000F 46                  217 	.db #0x46	; 70	'F'
                            218 	.area _CABS (ABS)
